// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file ip.proto (package ip, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file ip.proto.
 */
export const file_ip: GenFile = /*@__PURE__*/
  fileDesc("CghpcC5wcm90bxICaXAiHQoPQ3JlYXRlSXBSZXF1ZXN0EgoKAmlwGAEgASgJIh4KEENyZWF0ZUlwUmVzcG9uc2USCgoCaWQYASABKAMiLwoNR2V0SXBzUmVxdWVzdBIMCgRwYWdlGAEgASgDEhAKCHBhZ2VTaXplGAIgASgDIjoKDkdldElwc1Jlc3BvbnNlEg0KBXRvdGFsGAEgASgDEhkKBWl0ZW1zGAIgAygLMgouaXAuSXBJdGVtIiAKBklwSXRlbRIKCgJpZBgBIAEoAxIKCgJpcBgCIAEoCSIaCgxHZXRJcFJlcXVlc3QSCgoCaWQYASABKAMiJwoNR2V0SXBSZXNwb25zZRIKCgJpZBgBIAEoAxIKCgJpcBgCIAEoCTKhAQoJSXBTZXJ2aWNlEjUKCENyZWF0ZUlwEhMuaXAuQ3JlYXRlSXBSZXF1ZXN0GhQuaXAuQ3JlYXRlSXBSZXNwb25zZRIvCgZHZXRJcHMSES5pcC5HZXRJcHNSZXF1ZXN0GhIuaXAuR2V0SXBzUmVzcG9uc2USLAoFR2V0SXASEC5pcC5HZXRJcFJlcXVlc3QaES5pcC5HZXRJcFJlc3BvbnNlQipaKGdpdGh1Yi5jb20vbWFnb21lZGNvZGVyL2lwbWFuYWdlci9hcGkvcGJiBnByb3RvMw");

/**
 * @generated from message ip.CreateIpRequest
 */
export type CreateIpRequest = Message<"ip.CreateIpRequest"> & {
  /**
   * @generated from field: string ip = 1;
   */
  ip: string;
};

/**
 * Describes the message ip.CreateIpRequest.
 * Use `create(CreateIpRequestSchema)` to create a new message.
 */
export const CreateIpRequestSchema: GenMessage<CreateIpRequest> = /*@__PURE__*/
  messageDesc(file_ip, 0);

/**
 * @generated from message ip.CreateIpResponse
 */
export type CreateIpResponse = Message<"ip.CreateIpResponse"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message ip.CreateIpResponse.
 * Use `create(CreateIpResponseSchema)` to create a new message.
 */
export const CreateIpResponseSchema: GenMessage<CreateIpResponse> = /*@__PURE__*/
  messageDesc(file_ip, 1);

/**
 * @generated from message ip.GetIpsRequest
 */
export type GetIpsRequest = Message<"ip.GetIpsRequest"> & {
  /**
   * @generated from field: int64 page = 1;
   */
  page: bigint;

  /**
   * @generated from field: int64 pageSize = 2;
   */
  pageSize: bigint;
};

/**
 * Describes the message ip.GetIpsRequest.
 * Use `create(GetIpsRequestSchema)` to create a new message.
 */
export const GetIpsRequestSchema: GenMessage<GetIpsRequest> = /*@__PURE__*/
  messageDesc(file_ip, 2);

/**
 * @generated from message ip.GetIpsResponse
 */
export type GetIpsResponse = Message<"ip.GetIpsResponse"> & {
  /**
   * @generated from field: int64 total = 1;
   */
  total: bigint;

  /**
   * @generated from field: repeated ip.IpItem items = 2;
   */
  items: IpItem[];
};

/**
 * Describes the message ip.GetIpsResponse.
 * Use `create(GetIpsResponseSchema)` to create a new message.
 */
export const GetIpsResponseSchema: GenMessage<GetIpsResponse> = /*@__PURE__*/
  messageDesc(file_ip, 3);

/**
 * @generated from message ip.IpItem
 */
export type IpItem = Message<"ip.IpItem"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string ip = 2;
   */
  ip: string;
};

/**
 * Describes the message ip.IpItem.
 * Use `create(IpItemSchema)` to create a new message.
 */
export const IpItemSchema: GenMessage<IpItem> = /*@__PURE__*/
  messageDesc(file_ip, 4);

/**
 * @generated from message ip.GetIpRequest
 */
export type GetIpRequest = Message<"ip.GetIpRequest"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message ip.GetIpRequest.
 * Use `create(GetIpRequestSchema)` to create a new message.
 */
export const GetIpRequestSchema: GenMessage<GetIpRequest> = /*@__PURE__*/
  messageDesc(file_ip, 5);

/**
 * @generated from message ip.GetIpResponse
 */
export type GetIpResponse = Message<"ip.GetIpResponse"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string ip = 2;
   */
  ip: string;
};

/**
 * Describes the message ip.GetIpResponse.
 * Use `create(GetIpResponseSchema)` to create a new message.
 */
export const GetIpResponseSchema: GenMessage<GetIpResponse> = /*@__PURE__*/
  messageDesc(file_ip, 6);

/**
 * @generated from service ip.IpService
 */
export const IpService: GenService<{
  /**
   * @generated from rpc ip.IpService.CreateIp
   */
  createIp: {
    methodKind: "unary";
    input: typeof CreateIpRequestSchema;
    output: typeof CreateIpResponseSchema;
  },
  /**
   * @generated from rpc ip.IpService.GetIps
   */
  getIps: {
    methodKind: "unary";
    input: typeof GetIpsRequestSchema;
    output: typeof GetIpsResponseSchema;
  },
  /**
   * @generated from rpc ip.IpService.GetIp
   */
  getIp: {
    methodKind: "unary";
    input: typeof GetIpRequestSchema;
    output: typeof GetIpResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_ip, 0);

