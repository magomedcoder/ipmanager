// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: subnet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubnetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	VlanId        int64                  `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubnetRequest) Reset() {
	*x = CreateSubnetRequest{}
	mi := &file_subnet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubnetRequest) ProtoMessage() {}

func (x *CreateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubnetRequest.ProtoReflect.Descriptor instead.
func (*CreateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubnetRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateSubnetRequest) GetVlanId() int64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *CreateSubnetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateSubnetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubnetResponse) Reset() {
	*x = CreateSubnetResponse{}
	mi := &file_subnet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubnetResponse) ProtoMessage() {}

func (x *CreateSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubnetResponse.ProtoReflect.Descriptor instead.
func (*CreateSubnetResponse) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubnetResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubnetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubnetsRequest) Reset() {
	*x = GetSubnetsRequest{}
	mi := &file_subnet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubnetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetsRequest) ProtoMessage() {}

func (x *GetSubnetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetsRequest.ProtoReflect.Descriptor instead.
func (*GetSubnetsRequest) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubnetsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSubnetsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetSubnetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*SubnetItem          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubnetsResponse) Reset() {
	*x = GetSubnetsResponse{}
	mi := &file_subnet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubnetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetsResponse) ProtoMessage() {}

func (x *GetSubnetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetsResponse.ProtoReflect.Descriptor instead.
func (*GetSubnetsResponse) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubnetsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetSubnetsResponse) GetItems() []*SubnetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type SubnetItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	VlanId        int64                  `protobuf:"varint,3,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	VlanName      string                 `protobuf:"bytes,4,opt,name=vlan_name,json=vlanName,proto3" json:"vlan_name,omitempty"`
	CustomerId    int64                  `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName  string                 `protobuf:"bytes,6,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubnetItem) Reset() {
	*x = SubnetItem{}
	mi := &file_subnet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubnetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubnetItem) ProtoMessage() {}

func (x *SubnetItem) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubnetItem.ProtoReflect.Descriptor instead.
func (*SubnetItem) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{4}
}

func (x *SubnetItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubnetItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SubnetItem) GetVlanId() int64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *SubnetItem) GetVlanName() string {
	if x != nil {
		return x.VlanName
	}
	return ""
}

func (x *SubnetItem) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *SubnetItem) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

type GetSubnetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubnetRequest) Reset() {
	*x = GetSubnetRequest{}
	mi := &file_subnet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetRequest) ProtoMessage() {}

func (x *GetSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetRequest.ProtoReflect.Descriptor instead.
func (*GetSubnetRequest) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubnetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubnetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	VlanId        int64                  `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	VlanName      string                 `protobuf:"bytes,5,opt,name=vlan_name,json=vlanName,proto3" json:"vlan_name,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Charts        []int64                `protobuf:"varint,7,rep,packed,name=charts,proto3" json:"charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubnetResponse) Reset() {
	*x = GetSubnetResponse{}
	mi := &file_subnet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetResponse) ProtoMessage() {}

func (x *GetSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetResponse.ProtoReflect.Descriptor instead.
func (*GetSubnetResponse) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubnetResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSubnetResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetSubnetResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSubnetResponse) GetVlanId() int64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *GetSubnetResponse) GetVlanName() string {
	if x != nil {
		return x.VlanName
	}
	return ""
}

func (x *GetSubnetResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetSubnetResponse) GetCharts() []int64 {
	if x != nil {
		return x.Charts
	}
	return nil
}

type EditSubnetVlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	VlanId        int64                  `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditSubnetVlanRequest) Reset() {
	*x = EditSubnetVlanRequest{}
	mi := &file_subnet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditSubnetVlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSubnetVlanRequest) ProtoMessage() {}

func (x *EditSubnetVlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSubnetVlanRequest.ProtoReflect.Descriptor instead.
func (*EditSubnetVlanRequest) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{7}
}

func (x *EditSubnetVlanRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditSubnetVlanRequest) GetVlanId() int64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

type EditSubnetVlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditSubnetVlanResponse) Reset() {
	*x = EditSubnetVlanResponse{}
	mi := &file_subnet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditSubnetVlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSubnetVlanResponse) ProtoMessage() {}

func (x *EditSubnetVlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSubnetVlanResponse.ProtoReflect.Descriptor instead.
func (*EditSubnetVlanResponse) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{8}
}

func (x *EditSubnetVlanResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EditSubnetDescriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditSubnetDescriptionRequest) Reset() {
	*x = EditSubnetDescriptionRequest{}
	mi := &file_subnet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditSubnetDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSubnetDescriptionRequest) ProtoMessage() {}

func (x *EditSubnetDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSubnetDescriptionRequest.ProtoReflect.Descriptor instead.
func (*EditSubnetDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{9}
}

func (x *EditSubnetDescriptionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditSubnetDescriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type EditSubnetDescriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EditSubnetDescriptionResponse) Reset() {
	*x = EditSubnetDescriptionResponse{}
	mi := &file_subnet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditSubnetDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSubnetDescriptionResponse) ProtoMessage() {}

func (x *EditSubnetDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subnet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSubnetDescriptionResponse.ProtoReflect.Descriptor instead.
func (*EditSubnetDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_subnet_proto_rawDescGZIP(), []int{10}
}

func (x *EditSubnetDescriptionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_subnet_proto protoreflect.FileDescriptor

const file_subnet_proto_rawDesc = "" +
	"\n" +
	"\fsubnet.proto\x12\x06subnet\"`\n" +
	"\x13CreateSubnetRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x17\n" +
	"\avlan_id\x18\x02 \x01(\x03R\x06vlanId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"&\n" +
	"\x14CreateSubnetResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"C\n" +
	"\x11GetSubnetsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\"T\n" +
	"\x12GetSubnetsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12(\n" +
	"\x05items\x18\x02 \x03(\v2\x12.subnet.SubnetItemR\x05items\"\xa8\x01\n" +
	"\n" +
	"SubnetItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x17\n" +
	"\avlan_id\x18\x03 \x01(\x03R\x06vlanId\x12\x1b\n" +
	"\tvlan_name\x18\x04 \x01(\tR\bvlanName\x12\x1f\n" +
	"\vcustomer_id\x18\x05 \x01(\x03R\n" +
	"customerId\x12#\n" +
	"\rcustomer_name\x18\x06 \x01(\tR\fcustomerName\"\"\n" +
	"\x10GetSubnetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xb7\x01\n" +
	"\x11GetSubnetResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x17\n" +
	"\avlan_id\x18\x04 \x01(\x03R\x06vlanId\x12\x1b\n" +
	"\tvlan_name\x18\x05 \x01(\tR\bvlanName\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x16\n" +
	"\x06charts\x18\a \x03(\x03R\x06charts\"@\n" +
	"\x15EditSubnetVlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\avlan_id\x18\x02 \x01(\x03R\x06vlanId\"2\n" +
	"\x16EditSubnetVlanResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"P\n" +
	"\x1cEditSubnetDescriptionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"9\n" +
	"\x1dEditSubnetDescriptionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x9c\x03\n" +
	"\rSubnetService\x12I\n" +
	"\fCreateSubnet\x12\x1b.subnet.CreateSubnetRequest\x1a\x1c.subnet.CreateSubnetResponse\x12C\n" +
	"\n" +
	"GetSubnets\x12\x19.subnet.GetSubnetsRequest\x1a\x1a.subnet.GetSubnetsResponse\x12D\n" +
	"\rGetSubnetById\x12\x18.subnet.GetSubnetRequest\x1a\x19.subnet.GetSubnetResponse\x12O\n" +
	"\x0eEditSubnetVlan\x12\x1d.subnet.EditSubnetVlanRequest\x1a\x1e.subnet.EditSubnetVlanResponse\x12d\n" +
	"\x15EditSubnetDescription\x12$.subnet.EditSubnetDescriptionRequest\x1a%.subnet.EditSubnetDescriptionResponseB*Z(github.com/magomedcoder/ipmanager/api/pbb\x06proto3"

var (
	file_subnet_proto_rawDescOnce sync.Once
	file_subnet_proto_rawDescData []byte
)

func file_subnet_proto_rawDescGZIP() []byte {
	file_subnet_proto_rawDescOnce.Do(func() {
		file_subnet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subnet_proto_rawDesc), len(file_subnet_proto_rawDesc)))
	})
	return file_subnet_proto_rawDescData
}

var file_subnet_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_subnet_proto_goTypes = []any{
	(*CreateSubnetRequest)(nil),           // 0: subnet.CreateSubnetRequest
	(*CreateSubnetResponse)(nil),          // 1: subnet.CreateSubnetResponse
	(*GetSubnetsRequest)(nil),             // 2: subnet.GetSubnetsRequest
	(*GetSubnetsResponse)(nil),            // 3: subnet.GetSubnetsResponse
	(*SubnetItem)(nil),                    // 4: subnet.SubnetItem
	(*GetSubnetRequest)(nil),              // 5: subnet.GetSubnetRequest
	(*GetSubnetResponse)(nil),             // 6: subnet.GetSubnetResponse
	(*EditSubnetVlanRequest)(nil),         // 7: subnet.EditSubnetVlanRequest
	(*EditSubnetVlanResponse)(nil),        // 8: subnet.EditSubnetVlanResponse
	(*EditSubnetDescriptionRequest)(nil),  // 9: subnet.EditSubnetDescriptionRequest
	(*EditSubnetDescriptionResponse)(nil), // 10: subnet.EditSubnetDescriptionResponse
}
var file_subnet_proto_depIdxs = []int32{
	4,  // 0: subnet.GetSubnetsResponse.items:type_name -> subnet.SubnetItem
	0,  // 1: subnet.SubnetService.CreateSubnet:input_type -> subnet.CreateSubnetRequest
	2,  // 2: subnet.SubnetService.GetSubnets:input_type -> subnet.GetSubnetsRequest
	5,  // 3: subnet.SubnetService.GetSubnetById:input_type -> subnet.GetSubnetRequest
	7,  // 4: subnet.SubnetService.EditSubnetVlan:input_type -> subnet.EditSubnetVlanRequest
	9,  // 5: subnet.SubnetService.EditSubnetDescription:input_type -> subnet.EditSubnetDescriptionRequest
	1,  // 6: subnet.SubnetService.CreateSubnet:output_type -> subnet.CreateSubnetResponse
	3,  // 7: subnet.SubnetService.GetSubnets:output_type -> subnet.GetSubnetsResponse
	6,  // 8: subnet.SubnetService.GetSubnetById:output_type -> subnet.GetSubnetResponse
	8,  // 9: subnet.SubnetService.EditSubnetVlan:output_type -> subnet.EditSubnetVlanResponse
	10, // 10: subnet.SubnetService.EditSubnetDescription:output_type -> subnet.EditSubnetDescriptionResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_subnet_proto_init() }
func file_subnet_proto_init() {
	if File_subnet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subnet_proto_rawDesc), len(file_subnet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subnet_proto_goTypes,
		DependencyIndexes: file_subnet_proto_depIdxs,
		MessageInfos:      file_subnet_proto_msgTypes,
	}.Build()
	File_subnet_proto = out.File
	file_subnet_proto_goTypes = nil
	file_subnet_proto_depIdxs = nil
}
