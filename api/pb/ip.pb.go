// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: ip.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateIpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIpRequest) Reset() {
	*x = CreateIpRequest{}
	mi := &file_ip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIpRequest) ProtoMessage() {}

func (x *CreateIpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIpRequest.ProtoReflect.Descriptor instead.
func (*CreateIpRequest) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIpRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type CreateIpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateIpResponse) Reset() {
	*x = CreateIpResponse{}
	mi := &file_ip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateIpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIpResponse) ProtoMessage() {}

func (x *CreateIpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIpResponse.ProtoReflect.Descriptor instead.
func (*CreateIpResponse) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIpResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetIpsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIpsRequest) Reset() {
	*x = GetIpsRequest{}
	mi := &file_ip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpsRequest) ProtoMessage() {}

func (x *GetIpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpsRequest.ProtoReflect.Descriptor instead.
func (*GetIpsRequest) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{2}
}

func (x *GetIpsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetIpsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetIpsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Items         []*IpItem              `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIpsResponse) Reset() {
	*x = GetIpsResponse{}
	mi := &file_ip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpsResponse) ProtoMessage() {}

func (x *GetIpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpsResponse.ProtoReflect.Descriptor instead.
func (*GetIpsResponse) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{3}
}

func (x *GetIpsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetIpsResponse) GetItems() []*IpItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type IpItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	VlanId        int64                  `protobuf:"varint,3,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	VlanName      string                 `protobuf:"bytes,4,opt,name=vlan_name,json=vlanName,proto3" json:"vlan_name,omitempty"`
	CustomerId    int64                  `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerName  string                 `protobuf:"bytes,6,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpItem) Reset() {
	*x = IpItem{}
	mi := &file_ip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpItem) ProtoMessage() {}

func (x *IpItem) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpItem.ProtoReflect.Descriptor instead.
func (*IpItem) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{4}
}

func (x *IpItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IpItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpItem) GetVlanId() int64 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *IpItem) GetVlanName() string {
	if x != nil {
		return x.VlanName
	}
	return ""
}

func (x *IpItem) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *IpItem) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

type GetIpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIpRequest) Reset() {
	*x = GetIpRequest{}
	mi := &file_ip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpRequest) ProtoMessage() {}

func (x *GetIpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpRequest.ProtoReflect.Descriptor instead.
func (*GetIpRequest) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{5}
}

func (x *GetIpRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetIpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIpResponse) Reset() {
	*x = GetIpResponse{}
	mi := &file_ip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpResponse) ProtoMessage() {}

func (x *GetIpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpResponse.ProtoReflect.Descriptor instead.
func (*GetIpResponse) Descriptor() ([]byte, []int) {
	return file_ip_proto_rawDescGZIP(), []int{6}
}

func (x *GetIpResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetIpResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_ip_proto protoreflect.FileDescriptor

const file_ip_proto_rawDesc = "" +
	"\n" +
	"\bip.proto\x12\x02ip\"!\n" +
	"\x0fCreateIpRequest\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"\"\n" +
	"\x10CreateIpResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"?\n" +
	"\rGetIpsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\"H\n" +
	"\x0eGetIpsResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12 \n" +
	"\x05items\x18\x02 \x03(\v2\n" +
	".ip.IpItemR\x05items\"\xa4\x01\n" +
	"\x06IpItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x17\n" +
	"\avlan_id\x18\x03 \x01(\x03R\x06vlanId\x12\x1b\n" +
	"\tvlan_name\x18\x04 \x01(\tR\bvlanName\x12\x1f\n" +
	"\vcustomer_id\x18\x05 \x01(\x03R\n" +
	"customerId\x12#\n" +
	"\rcustomer_name\x18\x06 \x01(\tR\fcustomerName\"\x1e\n" +
	"\fGetIpRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"/\n" +
	"\rGetIpResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip2\xa5\x01\n" +
	"\tIpService\x125\n" +
	"\bCreateIp\x12\x13.ip.CreateIpRequest\x1a\x14.ip.CreateIpResponse\x12/\n" +
	"\x06GetIps\x12\x11.ip.GetIpsRequest\x1a\x12.ip.GetIpsResponse\x120\n" +
	"\tGetIpById\x12\x10.ip.GetIpRequest\x1a\x11.ip.GetIpResponseB*Z(github.com/magomedcoder/ipmanager/api/pbb\x06proto3"

var (
	file_ip_proto_rawDescOnce sync.Once
	file_ip_proto_rawDescData []byte
)

func file_ip_proto_rawDescGZIP() []byte {
	file_ip_proto_rawDescOnce.Do(func() {
		file_ip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ip_proto_rawDesc), len(file_ip_proto_rawDesc)))
	})
	return file_ip_proto_rawDescData
}

var file_ip_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ip_proto_goTypes = []any{
	(*CreateIpRequest)(nil),  // 0: ip.CreateIpRequest
	(*CreateIpResponse)(nil), // 1: ip.CreateIpResponse
	(*GetIpsRequest)(nil),    // 2: ip.GetIpsRequest
	(*GetIpsResponse)(nil),   // 3: ip.GetIpsResponse
	(*IpItem)(nil),           // 4: ip.IpItem
	(*GetIpRequest)(nil),     // 5: ip.GetIpRequest
	(*GetIpResponse)(nil),    // 6: ip.GetIpResponse
}
var file_ip_proto_depIdxs = []int32{
	4, // 0: ip.GetIpsResponse.items:type_name -> ip.IpItem
	0, // 1: ip.IpService.CreateIp:input_type -> ip.CreateIpRequest
	2, // 2: ip.IpService.GetIps:input_type -> ip.GetIpsRequest
	5, // 3: ip.IpService.GetIpById:input_type -> ip.GetIpRequest
	1, // 4: ip.IpService.CreateIp:output_type -> ip.CreateIpResponse
	3, // 5: ip.IpService.GetIps:output_type -> ip.GetIpsResponse
	6, // 6: ip.IpService.GetIpById:output_type -> ip.GetIpResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ip_proto_init() }
func file_ip_proto_init() {
	if File_ip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ip_proto_rawDesc), len(file_ip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ip_proto_goTypes,
		DependencyIndexes: file_ip_proto_depIdxs,
		MessageInfos:      file_ip_proto_msgTypes,
	}.Build()
	File_ip_proto = out.File
	file_ip_proto_goTypes = nil
	file_ip_proto_depIdxs = nil
}
